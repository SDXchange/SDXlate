//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.11.24 at 12:14:36 AM CST 
//


package org.oasis.xmile.v1_0;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for standard_time_unit_type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="standard_time_unit_type">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="day"/>
 *     &lt;enumeration value="hour"/>
 *     &lt;enumeration value="microsecond"/>
 *     &lt;enumeration value="millisecond"/>
 *     &lt;enumeration value="minute"/>
 *     &lt;enumeration value="month"/>
 *     &lt;enumeration value="nanosecond"/>
 *     &lt;enumeration value="quarter"/>
 *     &lt;enumeration value="second"/>
 *     &lt;enumeration value="week"/>
 *     &lt;enumeration value="year"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "standard_time_unit_type")
@XmlEnum
public enum StandardTimeUnitType {

    @XmlEnumValue("day")
    DAY("day"),
    @XmlEnumValue("hour")
    HOUR("hour"),
    @XmlEnumValue("microsecond")
    MICROSECOND("microsecond"),
    @XmlEnumValue("millisecond")
    MILLISECOND("millisecond"),
    @XmlEnumValue("minute")
    MINUTE("minute"),
    @XmlEnumValue("month")
    MONTH("month"),
    @XmlEnumValue("nanosecond")
    NANOSECOND("nanosecond"),
    @XmlEnumValue("quarter")
    QUARTER("quarter"),
    @XmlEnumValue("second")
    SECOND("second"),
    @XmlEnumValue("week")
    WEEK("week"),
    @XmlEnumValue("year")
    YEAR("year");
    private final String value;

    StandardTimeUnitType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static StandardTimeUnitType fromValue(String v) {
        for (StandardTimeUnitType c: StandardTimeUnitType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
